name: govcookiecutter template build

on:
  push:
    branches:
      - workflow_tests
jobs:
  template-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python: [ 3.9, '3.11' ]
        R:
#          - {using_R: No, version: N/A}
          - {using_R: Yes, version: 4.2.3}
          - {using_R: Yes, version: 4.3.3}
          - {using_R: Yes, version: 4.4.3}
    steps:
      - name: Checkout the revision
        uses: actions/checkout@v4
        with:
          path: ga-govcookiecutter
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install R ${{ matrix.R.version }}
        uses: r-lib/actions/setup-r@v2
        with:
          R-version: ${{ matrix.R.version }}
        if: ${{ matrix.R.using_R == 'Yes' }}
      - name: Install other ${{ matrix.os }} R dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev
          sudo apt-get install libgit2-dev
          sudo apt-get install libharfbuzz-dev
          sudo apt-get install libfribidi-dev
          sudo apt -y install libfontconfig1-dev
          sudo apt-get install libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.R.using_R == 'Yes' }}
      - name: Install extra macos R dependencies
        run: |
          brew install harfbuzz
          brew install fribidi
          brew install libgit2
        if: ${{ matrix.os == 'macos-latest' && matrix.R.using_R == 'Yes' }}
      - name: Install cookiecutter
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            # TODO: Add pip alternative, as Ubuntu 20.04LTS not currently supported (June 2021)
            sudo apt-get install cookiecutter || pip install cookiecutter
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install cookiecutter
          elif [ "$RUNNER_OS" == "Windows" ]; then
            pip install cookiecutter
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi;
        shell: bash
